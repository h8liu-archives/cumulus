#!/usr/bin/python
#
# Cumulus: Efficient Filesystem Backup to the Cloud
# Copyright (C) 2008 The Cumulus Developers
# See the AUTHORS file for a list of contributors.
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along
# with this program; if not, write to the Free Software Foundation, Inc.,
# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.

# Tool for copying cumulus archives from one source to another.

import os, sys

# Automatically set Python path, based on script directory.  This should be
# removed if the tools are properly installed somewhere.
script_directory = os.path.dirname(sys.argv[0])
sys.path.append(os.path.join(script_directory, 'python'))

import cumulus
import cumulus.store

store1 = cumulus.store.open(sys.argv[1])
store2 = cumulus.store.open(sys.argv[2])

source = cumulus.ObjectStore(cumulus.LowlevelDataStore(store1))

filter = set()
for s in sys.argv[3:]:
    filter.add(s)
    d = cumulus.parse_full(source.load_snapshot(s))
    filter.update(d['Segments'].split())

for ty in ('segments', 'checksums', 'snapshots'):
    for f in sorted(store1.list(ty)):
        m = cumulus.store.type_patterns[ty].match(f)
        if not m: continue
        if filter and m.group(1) not in filter:
            continue

        print ty, f
        try:
            store2.stat(ty, f)
        except cumulus.store.NotFoundError:
            store2.put(ty, f, store1.get(ty, f))
            print "    [sent]"
